@model PagedList.IPagedList<ShiftReports.Models.DowntimeType>
@using PagedList.Mvc; 
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    ViewBag.Title = "Downtime Type";
}

<h2>Downtime Type</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index","DowntimeType", FormMethod.Get))
{
    <p>
        Find by Plant Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search"/>
    </p>
}

<table>
    <tr>
      <th>
          @Html.ActionLink("Plant Name", "Index", new { sortOrder = ViewBag.PlantNameSortParm })
      </th>
        <th>
            @Html.ActionLink("Downtime Type", "Index", new { sortOrder = ViewBag.TypeSortParm})
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Plant.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.DowntimeTypeID }) |
            @Html.ActionLink("Details", "Details", new { id=item.DowntimeTypeID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.DowntimeTypeID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager( Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter }) )